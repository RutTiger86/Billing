// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Billing.Protobuf.Service {
  /// <summary>
  /// 트랜잭션 서비스 정의
  /// </summary>
  public static partial class TransactionService
  {
    static readonly string __ServiceName = "billing.protobuf.service.TransactionService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Billing.Protobuf.Service.IssueBillTxRequest> __Marshaller_billing_protobuf_service_IssueBillTxRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Billing.Protobuf.Service.IssueBillTxRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Billing.Protobuf.Service.IssueBillTxResponse> __Marshaller_billing_protobuf_service_IssueBillTxResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Billing.Protobuf.Service.IssueBillTxResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Billing.Protobuf.Service.CommonBillTxRequest> __Marshaller_billing_protobuf_service_CommonBillTxRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Billing.Protobuf.Service.CommonBillTxRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Billing.Protobuf.Service.CommonResultResponse> __Marshaller_billing_protobuf_service_CommonResultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Billing.Protobuf.Service.CommonResultResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Billing.Protobuf.Service.IssueBillTxRequest, global::Billing.Protobuf.Service.IssueBillTxResponse> __Method_IssueBillTx = new grpc::Method<global::Billing.Protobuf.Service.IssueBillTxRequest, global::Billing.Protobuf.Service.IssueBillTxResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IssueBillTx",
        __Marshaller_billing_protobuf_service_IssueBillTxRequest,
        __Marshaller_billing_protobuf_service_IssueBillTxResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Billing.Protobuf.Service.CommonBillTxRequest, global::Billing.Protobuf.Service.CommonResultResponse> __Method_CompleteBillTx = new grpc::Method<global::Billing.Protobuf.Service.CommonBillTxRequest, global::Billing.Protobuf.Service.CommonResultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CompleteBillTx",
        __Marshaller_billing_protobuf_service_CommonBillTxRequest,
        __Marshaller_billing_protobuf_service_CommonResultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Billing.Protobuf.Service.CommonBillTxRequest, global::Billing.Protobuf.Service.CommonResultResponse> __Method_CancleBillTx = new grpc::Method<global::Billing.Protobuf.Service.CommonBillTxRequest, global::Billing.Protobuf.Service.CommonResultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CancleBillTx",
        __Marshaller_billing_protobuf_service_CommonBillTxRequest,
        __Marshaller_billing_protobuf_service_CommonResultResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Billing.Protobuf.Service.ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TransactionService</summary>
    [grpc::BindServiceMethod(typeof(TransactionService), "BindService")]
    public abstract partial class TransactionServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Billing.Protobuf.Service.IssueBillTxResponse> IssueBillTx(global::Billing.Protobuf.Service.IssueBillTxRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Billing.Protobuf.Service.CommonResultResponse> CompleteBillTx(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Billing.Protobuf.Service.CommonResultResponse> CancleBillTx(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TransactionService</summary>
    public partial class TransactionServiceClient : grpc::ClientBase<TransactionServiceClient>
    {
      /// <summary>Creates a new client for TransactionService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TransactionServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TransactionService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TransactionServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TransactionServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TransactionServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.IssueBillTxResponse IssueBillTx(global::Billing.Protobuf.Service.IssueBillTxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IssueBillTx(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.IssueBillTxResponse IssueBillTx(global::Billing.Protobuf.Service.IssueBillTxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IssueBillTx, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.IssueBillTxResponse> IssueBillTxAsync(global::Billing.Protobuf.Service.IssueBillTxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IssueBillTxAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.IssueBillTxResponse> IssueBillTxAsync(global::Billing.Protobuf.Service.IssueBillTxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IssueBillTx, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.CommonResultResponse CompleteBillTx(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CompleteBillTx(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.CommonResultResponse CompleteBillTx(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CompleteBillTx, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.CommonResultResponse> CompleteBillTxAsync(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CompleteBillTxAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.CommonResultResponse> CompleteBillTxAsync(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CompleteBillTx, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.CommonResultResponse CancleBillTx(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancleBillTx(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.CommonResultResponse CancleBillTx(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CancleBillTx, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.CommonResultResponse> CancleBillTxAsync(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CancleBillTxAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.CommonResultResponse> CancleBillTxAsync(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CancleBillTx, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TransactionServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TransactionServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TransactionServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_IssueBillTx, serviceImpl.IssueBillTx)
          .AddMethod(__Method_CompleteBillTx, serviceImpl.CompleteBillTx)
          .AddMethod(__Method_CancleBillTx, serviceImpl.CancleBillTx).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TransactionServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_IssueBillTx, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Billing.Protobuf.Service.IssueBillTxRequest, global::Billing.Protobuf.Service.IssueBillTxResponse>(serviceImpl.IssueBillTx));
      serviceBinder.AddMethod(__Method_CompleteBillTx, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Billing.Protobuf.Service.CommonBillTxRequest, global::Billing.Protobuf.Service.CommonResultResponse>(serviceImpl.CompleteBillTx));
      serviceBinder.AddMethod(__Method_CancleBillTx, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Billing.Protobuf.Service.CommonBillTxRequest, global::Billing.Protobuf.Service.CommonResultResponse>(serviceImpl.CancleBillTx));
    }

  }
  /// <summary>
  ///구매 및 검증 서비스 정의
  /// </summary>
  public static partial class BillService
  {
    static readonly string __ServiceName = "billing.protobuf.service.BillService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Billing.Protobuf.Purchase.PurchaseInfo> __Marshaller_billing_protobuf_purchase_PurchaseInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Billing.Protobuf.Purchase.PurchaseInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Billing.Protobuf.Service.CommonResultResponse> __Marshaller_billing_protobuf_service_CommonResultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Billing.Protobuf.Service.CommonResultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Billing.Protobuf.Service.CommonBillTxRequest> __Marshaller_billing_protobuf_service_CommonBillTxRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Billing.Protobuf.Service.CommonBillTxRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Billing.Protobuf.Service.GetSubscriptionStateResponse> __Marshaller_billing_protobuf_service_GetSubscriptionStateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Billing.Protobuf.Service.GetSubscriptionStateResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Billing.Protobuf.Purchase.PurchaseInfo, global::Billing.Protobuf.Service.CommonResultResponse> __Method_PurchaseValidate = new grpc::Method<global::Billing.Protobuf.Purchase.PurchaseInfo, global::Billing.Protobuf.Service.CommonResultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PurchaseValidate",
        __Marshaller_billing_protobuf_purchase_PurchaseInfo,
        __Marshaller_billing_protobuf_service_CommonResultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Billing.Protobuf.Service.CommonBillTxRequest, global::Billing.Protobuf.Service.GetSubscriptionStateResponse> __Method_GetSubscriptionState = new grpc::Method<global::Billing.Protobuf.Service.CommonBillTxRequest, global::Billing.Protobuf.Service.GetSubscriptionStateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSubscriptionState",
        __Marshaller_billing_protobuf_service_CommonBillTxRequest,
        __Marshaller_billing_protobuf_service_GetSubscriptionStateResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Billing.Protobuf.Service.ServiceReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of BillService</summary>
    [grpc::BindServiceMethod(typeof(BillService), "BindService")]
    public abstract partial class BillServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Billing.Protobuf.Service.CommonResultResponse> PurchaseValidate(global::Billing.Protobuf.Purchase.PurchaseInfo request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Billing.Protobuf.Service.GetSubscriptionStateResponse> GetSubscriptionState(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for BillService</summary>
    public partial class BillServiceClient : grpc::ClientBase<BillServiceClient>
    {
      /// <summary>Creates a new client for BillService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BillServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for BillService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public BillServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BillServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected BillServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.CommonResultResponse PurchaseValidate(global::Billing.Protobuf.Purchase.PurchaseInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PurchaseValidate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.CommonResultResponse PurchaseValidate(global::Billing.Protobuf.Purchase.PurchaseInfo request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PurchaseValidate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.CommonResultResponse> PurchaseValidateAsync(global::Billing.Protobuf.Purchase.PurchaseInfo request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PurchaseValidateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.CommonResultResponse> PurchaseValidateAsync(global::Billing.Protobuf.Purchase.PurchaseInfo request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PurchaseValidate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.GetSubscriptionStateResponse GetSubscriptionState(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubscriptionState(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Billing.Protobuf.Service.GetSubscriptionStateResponse GetSubscriptionState(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSubscriptionState, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.GetSubscriptionStateResponse> GetSubscriptionStateAsync(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSubscriptionStateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Billing.Protobuf.Service.GetSubscriptionStateResponse> GetSubscriptionStateAsync(global::Billing.Protobuf.Service.CommonBillTxRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSubscriptionState, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override BillServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new BillServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(BillServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PurchaseValidate, serviceImpl.PurchaseValidate)
          .AddMethod(__Method_GetSubscriptionState, serviceImpl.GetSubscriptionState).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, BillServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_PurchaseValidate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Billing.Protobuf.Purchase.PurchaseInfo, global::Billing.Protobuf.Service.CommonResultResponse>(serviceImpl.PurchaseValidate));
      serviceBinder.AddMethod(__Method_GetSubscriptionState, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Billing.Protobuf.Service.CommonBillTxRequest, global::Billing.Protobuf.Service.GetSubscriptionStateResponse>(serviceImpl.GetSubscriptionState));
    }

  }
}
#endregion
